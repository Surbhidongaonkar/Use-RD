name: Repository Dispatch
on:
  repository_dispatch:
    types: update-on-release
jobs:
  myEvent:
    runs-on: ubuntu-latest
    if: "${{ !github.event.client_payload.prerelease }}"
    steps:
      #- run: echo ${{ github.event.client_payload.ref }} 
      #- run: echo ${{ fromJson(github.event.client_payload.github) }} 
      - name: check and format version string
        #if: echo "${{ github.event.client_payload.release }}" | awk -F"." '{print NF-1}'
        run: |
             client_payload="${{ github.event.client_payload.release }}"
             version_number="$(echo "$client_payload" | sed 's/v//')" 
             count="$(echo "$version_number" | awk -F"." '{print NF-1}')"
             if [[ $count -eq 2 ]]; then 
               version_number="$(echo "$version_number" | sed 's/$/.0/')"
             fi
             if [[ "$(echo "$version_number" | awk -F"." '{print NF-1}')" -ne 3 ]]; then
               echo "The tag '$client_payload'  is invalid" 1>&2
               exit 1
             fi
             echo "::set-env name=VERSION_STRING::$version_number"              
      - name: check version
        run: echo $VERSION_STRING 

             
               
        


  
